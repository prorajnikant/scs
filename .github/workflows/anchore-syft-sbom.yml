# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow checks out code, builds an image, performs a container image
# scan with Anchore's Syft tool, and uploads the results to the GitHub Dependency
# submission API.

# For more information on the Anchore sbom-action usage
# and parameters, see https://github.com/anchore/sbom-action. For more
# information about the Anchore SBOM tool, Syft, see
# https://github.com/anchore/syft
name: Anchore Syft SBOM scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
  
permissions:
  contents: read
  id-token: write
  attestations: write
  packages: write

jobs:
  Anchore-Build-Scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v4
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push Docker image
      id: build
      run: |
        # Convert repository name to lowercase (GHCR requirement)  
        REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
        IMAGE_NAME="ghcr.io/${REPO_LOWER}:${{ github.sha }}"
        IMAGE_NAME_NO_TAG="ghcr.io/${REPO_LOWER}"
        
        docker build . --file Dockerfile --tag "${IMAGE_NAME}"
        docker push "${IMAGE_NAME}" 
        
        # Get the image digest after push
        IMAGE_DIGEST=$(docker image inspect "${IMAGE_NAME}" --format='{{index .RepoDigests 0}}' | cut -d'@' -f2)
        echo "digest=sha256:${IMAGE_DIGEST}" >> $GITHUB_OUTPUT
        echo "image-name=${IMAGE_NAME}" >> $GITHUB_OUTPUT
        echo "image-name-no-tag=${IMAGE_NAME_NO_TAG}" >> $GITHUB_OUTPUT
        echo "Built and pushed image: ${IMAGE_NAME}"
        echo "Image digest: sha256:${IMAGE_DIGEST}"
    - name: Scan the image and upload SBOM artifact
      uses: anchore/sbom-action@v0.20.5
      with:
        image: ${{ steps.build.outputs.image-name }}
        format: "cyclonedx-json"
        artifact-name: image-sbom.cdx.json
        dependency-snapshot: true
    - name: Generate SBOM attestation
      uses: actions/attest-sbom@v2
      with:
        subject-name: ${{ steps.build.outputs.image-name-no-tag }}
        subject-digest: ${{ steps.build.outputs.digest }}
        sbom-path: "image-sbom.cdx.json"
        push-to-registry: true